grammar PortraitReader
{
	options	{
		Axiom = "Start";
		Separator = "SEPARATOR";
	}
	terminals {
		INT -> '-'? [0-9]+;
		FLOAT -> INT? '.' INT 'f'?;
		DATE -> INT '.' INT '.' INT;
		NUMBER -> INT|FLOAT;
				
		ASSIGN -> '=';
		OPEN -> '{';
		CLOSE -> '}';
		
		LETTER -> [a-zA-Z] | U+0080 .. U+02AF;
		IDENTIFIER -> (LETTER|'_'|U+0027|U+0060|':') (LETTER|[0-9]|'_'|'-'|U+0027|U+0060|'*'|','|'.'|'â€˜'|'!'|'\\'|'/'|':'|'?' )*;
		STRING -> '"' ' '* IDENTIFIER* (' ' IDENTIFIER+)* ' '* '"';
		
		BOOL -> 'yes'|'no';
		
		NEW_LINE -> U+000D /* CR */
                    |  U+000A /* LF */
                    |  U+000D U+000A /* CR LF */
                    |  U+2028 /* LS */
                    |  U+2029 /* PS */ ;
		COMMENT -> '#' (.* - (.* NEW_LINE .*)) NEW_LINE? ;
		
		WHITE_SPACE -> ' ' | '\t' | NEW_LINE | U+00A0;
		SEPARATOR -> (WHITE_SPACE | COMMENT)+;
	}
	rules{
		idOption -> IDENTIFIER ASSIGN! IDENTIFIER;
		boolOption -> IDENTIFIER ASSIGN! BOOL;
		stringOption -> IDENTIFIER ASSIGN! STRING;
		numberOption -> IDENTIFIER ASSIGN! NUMBER;
		groupOption -> IDENTIFIER ASSIGN! OPEN! Option* CLOSE!;
		colourGroup -> OPEN! NUMBER NUMBER NUMBER CLOSE!;
		layerGroup -> IDENTIFIER! ASSIGN! OPEN! STRING+ CLOSE!;
		cultureGroup -> IDENTIFIER! ASSIGN! OPEN! NUMBER+ CLOSE!;
		
		Option -> (idOption | boolOption | stringOption | numberOption | groupOption^ | colourGroup^ | layerGroup^ | cultureGroup^ );
		
		Sprite -> IDENTIFIER ASSIGN! OPEN! Option+ CLOSE!;
		
		Start -> Sprite*;
	}	
}